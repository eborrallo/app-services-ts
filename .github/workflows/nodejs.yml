name: Node CI

on: [push]

jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm install
        run: |
          npm install
      - name: npm run build
        run: |
          npm run build --if-present
  Unit-tests:
    needs: [ Build ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install
        run: |
          npm install
      - name: npm test
        run: |
          npm run test:unit

  Functional-tests:
    needs: [ Build ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.17]
        mongodb-version: [4.2]
        elasticsearch-version: ['7.9.3']
        rabbitmq-version: ['3.8.2-management-alpine']

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Up Docker compose
        run: docker compose up -d
      - name: npm install
        run: npm install
      - name: npm test
        run: npm run test:features
      - name: Down Docker compose
        run: docker compose down
